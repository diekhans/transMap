#!/usr/bin/env python

import transMapProgSetup  # noqa: F401
import argparse
import sqlite3
from pycbio.sys import fileOps
from transMap.genomeData import AnnotationType
from transMap.srcData import srcAlignXRefLoad
from transMap.genbank import GenbankHgData

verbose = False


def parseArgs():
    desc = """Obtain PSL alignments for UCSC GenBank files.
    """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--verbose", action="store_true", default=False,
                        help="""verbose tracing""")
    parser.add_argument("--testAccFile", default=None,
                        help="""limit to test accession, less version, in this file testing purposes""")
    parser.add_argument("srcHgDb",
                        help="""Genome database for assembly""")
    parser.add_argument("annotationType", choices=(AnnotationType.rna, AnnotationType.est, AnnotationType.refseq), type=AnnotationType,
                        help="""annotation set type to obtain""")
    parser.add_argument("transMapSrcDb",
                        help="""sqlite3 database for source dataset""")
    opts = parser.parse_args()
    global verbose
    verbose = opts.verbose
    return opts


def srcDbLoadGenbankAligns(srcHgDb, annotationType, transMapSrcDb, testAccFile):
    testAccSubset = fileOps.readFileLines(testAccFile) if testAccFile is not None else None
    genbankHgData = GenbankHgData(srcHgDb, annotationType)
    transMapSrcDbConn = sqlite3.connect(transMapSrcDb)
    try:
        srcAlignXRefLoad(transMapSrcDbConn, genbankHgData.alignReader(testAccSubset=testAccSubset))
    finally:
        transMapSrcDbConn.close()

# entry
opts = parseArgs()
srcDbLoadGenbankAligns(opts.srcHgDb, opts.annotationType, opts.transMapSrcDb, opts.testAccFile)
