#!/usr/bin/env python

import transMapProgSetup  # noqa: F401
import argparse
import sqlite3
from transMap.genomeDefs import AnnSetType
from transMap.transMapLite import loadAlignsXRefs
from transMap.genbank import GenbankHgData

verbose = False


def parseArgs():
    desc = """Obtain PSL alignments for UCSC GenBank files.
    """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--verbose", action="store_true", default=False,
                        help="""verbose tracing""")
    parser.add_argument("--limit", type=int, default=None,
                        help="""limit to this number of records for testing""")
    parser.add_argument("srcHgDb",
                        help="""Genome database for assembly""")
    parser.add_argument("annSetType", choices=(AnnSetType.mrna, AnnSetType.splicedEst, AnnSetType.refSeq), type=AnnSetType,
                        help="""annotation set type to obtain""")
    parser.add_argument("transMapSrcDb",
                        help="""sqlite3 database for source dataset""")
    opts = parser.parse_args()
    global verbose
    verbose = opts.verbose
    return opts


def getGenbankAligns(srcHgDb, annSetType, transMapSrcDb, limit):
    genbankHgData = GenbankHgData(srcHgDb, annSetType)
    transMapSrcDbConn = sqlite3.connect(transMapSrcDb)
    try:
        alignReader = genbankHgData.alignReader(limit=limit)
        loadAlignsXRefs(transMapSrcDbConn, alignReader)
    finally:
        transMapSrcDbConn.close()

# entry
opts = parseArgs()
getGenbankAligns(opts.srcHgDb, opts.annSetType, opts.transMapSrcDb, opts.limit)
