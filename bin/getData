#!/usr/bin/env python

import sys, os
rootDir = os.path.normpath(os.path.dirname(os.path.realpath(sys.argv[0])) + "/..")
sys.path = [rootDir + "/extern/pycbio/lib", rootDir + "/lib/py", rootDir + "/rules"] + sys.path
from transMap import TransMap,GenomeDefs, MappingDefs
from transMap.MappingDefs import MappingDefs
from pycbio.exrun import ExRun, Verb
from pycbio.sys import fileOps, procOps
from optparse import OptionParser
import CDnaData

## FIXME: for some reason, pslStats didn't run the first time

class CmdLine(object):
    usage="""%prog [options] genomeDefsPickle mappingsInfo"""
    def __init__(self):
        parser = OptionParser(usage=CmdLine.usage)
        parser.add_option("--dumpGraph", action="store_true", dest="dumpGraph", default=False,
                          help="""dump the graph before starting""")
        parser.add_option("--dumpGraphAfter", action="store_true", dest="dumpGraphAfter", default=False,
                          help="""dump the graph after finish""")
        parser.add_option("--dryRun", action="store_true", dest="dryRun", default=False,
                          help="""don't actually run""")
        parser.add_option("--threads", action="store", dest="threads", default=0, type="int",
                          help="""run this many threads""")
        MappingDefs.addOptions(parser)
        (opts, args) = parser.parse_args()
        if len(args) != 2:
            parser.error("wrong number of arguments")
        (self.genomeDefsPickle, self. mappingsInfo) = args
        self.__dict__.update(opts.__dict__)


def dumpMappings(infoFile, mdefs):
    fh = open(infoFile, "w")
    for chains in mdefs.allMappings:
        fh.write(str(chains))
        if chains not in mdefs.mappings.chainsMap:
            fh.write("\tSKIPPED: no chains/nets")
        fh.write('\n')
    fh.close()

# entry
opts = CmdLine()
mdefs = MappingDefs(opts, inclAllMappings=True);
dumpMappings(opts.mappingsInfo, mdefs)

exrun = ExRun(maxLocalThreads=opts.threads)
exrun.verb.flags.add(Verb.details)
if opts.dumpGraph:
    exrun.verb.flags.add(Verb.dumpStart)
transMap = TransMap.TransMap(exrun, mdefs.defs, ".", mdefs.mappings)
for srcDb in mdefs.mappings.srcDbs:
    CDnaData.createRules(transMap, srcDb)
exrun.run(dryRun=opts.dryRun)
