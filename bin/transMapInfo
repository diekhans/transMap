#!/usr/bin/env python

import transMapProgSetup  # noqa: F401
import sys
import os
import argparse
from pycbio.sys import loggingOps
from pycbio.sys import fileOps
from transMap.transMapConf import transMapConfLoad
from transMap.genomeData import Genomes


def parseArgs():
    desc = """Get information about the state of transmap give
    a current
    """
    parser = argparse.ArgumentParser(description=desc)
    loggingOps.addCmdOptions(parser)
    parser.add_argument("configPyFile",
                        help="""configuration python file""")
    parser.add_argument("outTsv",
                        help="""write results to this file""")
    opts = parser.parse_args()
    loggingOps.setupFromCmd(opts, sys.argv[0])
    return opts


def getState(conf, mapping):
    if os.path.exists(conf.getMappedBigPslFileForDestHgDb(mapping.destHgDb, mapping.annotationType)):
        return "exists"
    else:
        return "needed"


def writeTransMapInfo(conf, outFh, genomes):
    fileOps.prRowv(outFh, "destHgDb", "state", "srcHgDb", "annotationType", "chainType")
    for mapping in genomes.getCurrentMappings():
        fileOps.prRowv(outFh, mapping.destHgDb, getState(conf, mapping),
                       mapping.srcHgDb, mapping.annotationType, mapping.chains.chainType)


def transMapInfo(opts):
    conf = transMapConfLoad(opts.configPyFile)
    genomes = Genomes(conf)
    with open(opts.outTsv, "w") as outFh:
        writeTransMapInfo(conf, outFh, genomes)


# entry
transMapInfo(parseArgs())
