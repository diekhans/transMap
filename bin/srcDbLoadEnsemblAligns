#!/usr/bin/env python

import transMapProgSetup  # noqa: F401
import argparse
import sqlite3
import sys
from pycbio.sys import loggingOps
from pycbio.sys import fileOps
from transMap.genomeData import AnnotationType
from transMap.ensembl import EnsemblHgData
from transMap.srcData import srcAlignXRefLoad


def parseArgs():
    desc = """Obtain PSL alignments for GENCODE or Ensembl from ucsc database files.
    """
    parser = argparse.ArgumentParser(description=desc)
    loggingOps.addCmdOptions(parser)
    parser.add_argument("--testAccvFile", default=None,
                        help="""limit to test accession, with version, in this file testing purposes""")
    parser.add_argument("srcHgDb",
                        help="""Genome database for assembly""")
    parser.add_argument("annotationType", choices=(AnnotationType.gencode, AnnotationType.ensembl), type=AnnotationType,
                        help="""annotation set type to obtain""")
    parser.add_argument("transMapSrcDb",
                        help="""sqlite3 database for source dataset""")
    opts = parser.parse_args()
    loggingOps.setupFromCmd(opts, sys.argv[0])
    return opts


def srcDbLoadEnsemblAligns(srcHgDb, annotationType, transMapSrcDb, testAccvFile):
    testAccvSubset = fileOps.readFileLines(testAccvFile) if testAccvFile is not None else None
    ensemblHgData = EnsemblHgData(srcHgDb, annotationType)
    transMapSrcDbConn = sqlite3.connect(transMapSrcDb)
    try:
        alignReader = ensemblHgData.alignReader(testAccvSubset=testAccvSubset)
        srcAlignXRefLoad(transMapSrcDbConn, alignReader)
    finally:
        transMapSrcDbConn.close()

# entry
opts = parseArgs()
srcDbLoadEnsemblAligns(opts.srcHgDb, opts.annotationType, opts.transMapSrcDb, opts.testAccvFile)
