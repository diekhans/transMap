#!/usr/bin/env python

import transMapProgSetup  # noqa: F401
import argparse
import sqlite3
import sys
from pycbio.sys import loggingOps
from transMap.genomeData import AnnotationType
from transMap.srcData import SourceDbTables, SrcMetadataDbTable, SrcAlignDbTable
from transMap.ensembl import EnsemblHgData


def parseArgs():
    desc = """Obtain metadata for Ensembl or GENCODE source transcripts.
    """
    parser = argparse.ArgumentParser(description=desc)
    loggingOps.addCmdOptions(parser)
    parser.add_argument("--testLimit", action="store_true", default=False,
                        help="""limit to alignments that are in srcAlign table for testing""")
    parser.add_argument("srcHgDb",
                        help="""Genome database for assembly""")
    parser.add_argument("annotationType", choices=(AnnotationType.ensembl, AnnotationType.gencode), type=AnnotationType,
                        help="""annotation set type to obtain""")
    parser.add_argument("transMapSrcDb",
                        help="""sqlite3 database for source dataset; must have srcAlign table loaded with alignments""")
    opts = parser.parse_args()
    loggingOps.setupFromCmd(opts, sys.argv[0])
    return opts


def getTestLimitAccv(transMapSrcDbConn):
    return SrcAlignDbTable(transMapSrcDbConn, SourceDbTables.srcAlignTbl).getAllAccv()

def getEnsemblMetadata(srcHgDb, annotationType, transMapSrcDb, testLimit):
    ensemblHgData = EnsemblHgData(srcHgDb, annotationType)
    transMapSrcDbConn = sqlite3.connect(transMapSrcDb)
    try:
        testAccvSubset = getTestLimitAccv(transMapSrcDbConn) if testLimit else None
        metadataReader = ensemblHgData.metadataReader(testAccvSubset)
        SrcMetadataDbTable.loadStep(transMapSrcDbConn, metadataReader)
    finally:
        transMapSrcDbConn.close()

opts = parseArgs()
getEnsemblMetadata(opts.srcHgDb, opts.annotationType, opts.transMapSrcDb, opts.testLimit)
