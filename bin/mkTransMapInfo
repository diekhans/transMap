#!/usr/bin/env python
import sys, os, re
rootDir = os.path.normpath(os.path.dirname(os.path.dirname(sys.argv[0])))
sys.path.append(rootDir+"/extern/pycbio/lib")
from optparse import OptionParser
from pycbio.tsv.TSVReader import TSVReader
from pycbio.sys import fileOps

class CmdLine(object):
    usage="""%prog [options] mapInfo1 [mapInfo2 ...]

    convert mapInfo files to the transMapInfo table format
assumes dir containing files is srcName
"""
    def __init__(self):
        parser = OptionParser(usage=CmdLine.usage)
        # options added to handle reconstruction
        parser.add_option("--srcDb", action="store", dest="srcDb", default=None,
                          help="""use this srcDb rather than parsing from mapInfo path""")
        parser.add_option("--chainType", dest="chainType", action="store", default=None,
                          help="use this chain type for all chains rather than looking in mapInfo file")
        parser.add_option("--keepSrcLevels", dest="keepSrcLevels", action="store", default=None, type="int",
                          help="strip uniqueness levels from srcId, keep only this number")
        (opts, args) = parser.parse_args()
        if len(args) < 1:
            parser.error("wrong number of arguments")
        self.mapInfos = args
        self.__dict__.update(opts.__dict__)

def uniqStrip(id, stripRe):
    return stripRe.search(id).group(1)

def parseSrcDb(fpath):
    return fpath.split("/")[-2]

def mapInfoCnv(mapInfoFile, srcDb, forceChainType, stripRe, outFh):
    if srcDb == None:
        srcDb = parseSrcDb(mapInfoFile)
    for mi in TSVReader(mapInfoFile):
        ct = forceChainType if forceChainType != None else mi.chainType
        srcId = mi.srcQName if stripRe == None else uniqStrip(mi.srcQName, stripRe)
        fileOps.prRowv(outFh, mi.mappedQName, srcDb, srcId, mi.mappingId, ct)

opts = CmdLine()
if opts.keepSrcLevels != None:
    modParts = []
    for cnt in xrange(opts.keepSrcLevels):
        modParts.append("([0-9]+)")
    stripRe = re.compile("^((.+)-" + "\\.".join(modParts) + ")")
else:
    stripRe = None

for mapInfo in opts.mapInfos:
    mapInfoCnv(mapInfo, opts.srcDb, opts.chainType, stripRe, sys.stdout)
